Binary Search for both Ascending array and Descending array
#include <iostream>
#include <string>
#include <vector>
using namespace std;

int binarySeach(vector<int> &arr, int size, int key, string arrType) {
  int start = 0;
  int end = size - 1;
  int mid = (start + end) / 2;
  int round = 0;
  string type = arrType;

  if (arrType == "ASC") {

    while (start <= end) {
      if (arr[mid] == key) {
        return mid;
      }

      if (key > arr[mid]) {
        start = mid + 1;
        mid = (start + end) / 2;
      }

      if (key < arr[mid]) {
        end = mid - 1;
        mid = (start + end) / 2;
      }
    }
  }

  if (arrType == "DESC") {
    while (start <= end) {
      if (key == arr[mid]) {
        return mid;
      }
      if (key < arr[mid]) {
        start = mid + 1;
        mid = (start + end) / 2;
      }

      if (key > arr[mid]) {
        end = mid - 1;
        mid = (start + end) / 2;
      }
    }
  }

  return -1;
}

int main() {
  // vector<int> arr = {1, 3, 5, 6, 7, 8, 9, 10, 15, 19, 35};
  vector<int> arr = {13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 1};
  int key = 3;
  string arrType = "DESC";
  int result = binarySeach(arr, arr.size(), key, arrType);

  if (result >= 0) {
    cout << "The key value " << key << " is present on " << result << " index"
         << endl;
  } else {
    cout << "The key value " << key << " is not present" << endl;
  }
}
