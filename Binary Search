BINARY SEARCH
In binary search we take the array, find start, end, and mid index of the array and 
check if the searched value is in the mid index the return the index 
else we check if the searched value if greater than mid index value then we set the value of start to mid+1 and then again find the mid and check the condition
else we check if the seached value is less then mid index value then we set the value of end to mid-1 and then again find the mid and check the condition

//Code
#include <iostream>
#include <vector>
using namespace std;

void display(vector<int> &arr, int size) {
  for (int i = 0; i < size; i++) {
    cout << arr[i] << " ";
  }
  cout << endl;
}

void binarySearch(vector<int> &arr, int size, int key) {
  int start = 0;
  int end = size;
  int mid = (start + end) / 2;
  for (int i = start; i < end; i++) {
    if (start <= end) {
      if (arr[mid] == key) {
        cout << "The searched element found on " << mid << " position" << endl;
        break;
      } else if (key > arr[mid]) {
        start = mid + 1;
      } else if (key < arr[mid]) {
        end = mid - 1;
      }
    }
    mid = (start + end) / 2;
  }
}

void selectionSort(vector<int> &arr, int size) {
  for (int i = 0; i < size; i++) {
    for (int j = i + 1; j < size; j++) {
      if (arr[i] > arr[j]) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
      }
    }
  }
}

int main() {
  vector<int> arr = {3, 6, 8, 12, 14, 17, 25, 29, 31, 36, 42, 47};
  selectionSort(arr, arr.size());
  // display(arr, arr.size());
  binarySearch(arr, arr.size(), 42);
  // display(arr, arr.size());
}
